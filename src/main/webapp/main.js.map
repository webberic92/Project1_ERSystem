{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/approve-or-deny/approve-or-deny.component.css","webpack:///./src/app/components/approve-or-deny/approve-or-deny.component.html","webpack:///./src/app/components/approve-or-deny/approve-or-deny.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav/nav.component.css","webpack:///./src/app/components/nav/nav.component.html","webpack:///./src/app/components/nav/nav.component.ts","webpack:///./src/app/components/reimbursement-request/reimbursement-request.component.css","webpack:///./src/app/components/reimbursement-request/reimbursement-request.component.html","webpack:///./src/app/components/reimbursement-request/reimbursement-request.component.ts","webpack:///./src/app/components/view-all-reimbursements/view-all-reimbursements.component.css","webpack:///./src/app/components/view-all-reimbursements/view-all-reimbursements.component.html","webpack:///./src/app/components/view-all-reimbursements/view-all-reimbursements.component.ts","webpack:///./src/app/components/view-reimbursements/view-reimbursements.component.css","webpack:///./src/app/components/view-reimbursements/view-reimbursements.component.html","webpack:///./src/app/components/view-reimbursements/view-reimbursements.component.ts","webpack:///./src/app/models/Reimbursement.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/reimbursement.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n<button class=\\\"submit\\\" (click)=\\\"refresh()\\\">Reload</button>\\r\\n\\r\\n\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let firstName of firstName\\\">\\r\\n      {{ firstName }}\\r\\n    </li>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  refresh(): void{\r\n    window.location.href = 'http://localhost:8080/login/';\r\n  }\r\n  getUser(): void{\r\n    console.log(JSON.parse(localStorage.getItem(\"authToken\")).firstName),\r\n    console.log(JSON.parse(localStorage.getItem(\"authToken\")).lastName)\r\n\r\n      }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NavComponent } from './components/nav/nav.component';\r\nimport { ViewReimbursementsComponent } from './components/view-reimbursements/view-reimbursements.component';\r\nimport { ReimbursementRequestComponent } from './components/reimbursement-request/reimbursement-request.component';\r\nimport { ApproveOrDenyComponent } from './components/approve-or-deny/approve-or-deny.component';\r\nimport { ViewAllReimbursementsComponent } from './components/view-all-reimbursements/view-all-reimbursements.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'reimbursementrequest',\r\n    component: ReimbursementRequestComponent\r\n  },\r\n  {\r\n    path: 'showreimbursementsemp',\r\n    component: ViewReimbursementsComponent\r\n  },\r\n  {\r\n    path: 'showreimbursementsmanager',\r\n    component: ViewAllReimbursementsComponent\r\n  },\r\n  {\r\n    path: 'approveordenyreimbursements',\r\n    component: ApproveOrDenyComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    NavComponent,\r\n    ViewReimbursementsComponent,\r\n    ReimbursementRequestComponent,\r\n    ApproveOrDenyComponent,\r\n    ViewAllReimbursementsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [AuthGuardService,{provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h1>Reimbursement Approval</h1>\\n<input type=\\\"checkbox\\\" (click)=\\\"fShowApprovedReimbursements()\\\">Approved<br>\\n<input type=\\\"checkbox\\\" (click)=\\\"fShowDeniedReimbursements()\\\">Denied<br>\\n<input type=\\\"checkbox\\\" (click)=\\\"fShowPendingReimbursements()\\\">Pending<br>\\n<ol>\\n  <li *ngFor=\\\"let reimbursement of reimbursements\\\">\\n    <div *ngIf=\\\"reimbursement.statusId === 1 && showPendingReimbursements\\n     || reimbursement.statusId === 2 && showApprovedReimbursements\\n      || reimbursement.statusId === 3 && showDeniedReimbursements\\\">\\n      <div>\\n        {{reimbursement.authorId}}\\n        {{reimbursement.description}}\\n        ${{reimbursement.amount}}\\n        {{reimbursement.dateSubmitted}}\\n        {{reimbursement.typeId}}\\n        {{reimbursement.statusId}}\\n\\n      <div *ngIf=\\\"reimbursement.statusId === 1\\\">\\n        <form (ngSubmit)=\\\"submitRequest(f, reimbursement.id)\\\" #f=\\\"ngForm\\\">\\n          <input type=\\\"radio\\\" value=\\\"approve\\\" ngModel name=\\\"status\\\">Approve<br>\\n          <input type=\\\"radio\\\" value=\\\"deny\\\" ngModel name=\\\"status\\\">Deny<br>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\n        </form>\\n      </div>\\n      </div>\\n      <div *ngIf=\\\"reimbursement.statusId === 2\\\">\\n        This reimbursement has been approved.\\n      </div>\\n      <div *ngIf=\\\"reimbursement.statusId === 3\\\">\\n        This reimbursement has been denied.\\n      </div>\\n      <div>\\n        {{reimbursement.statusId}}\\n      </div>\\n    </div>\\n  </li>\\n\\n</ol>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ReimbursementService} from \"../../services/reimbursement.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Reimbursement} from \"../../models/Reimbursement\";\nimport {NgForm} from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-approve-or-deny',\n  templateUrl: './approve-or-deny.component.html',\n  styleUrls: ['./approve-or-deny.component.css']\n})\nexport class ApproveOrDenyComponent implements OnInit {\n  reimbursements: Reimbursement[];\n  showApprovedReimbursements: boolean = true;\n  showDeniedReimbursements: boolean = true;\n  showPendingReimbursements: boolean = true;\n\n  constructor(private reimbursementService: ReimbursementService, private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.reimbursementService.getAllReimbursements()\n      .subscribe(reimbursements => {\n        this.reimbursements = reimbursements;\n      })\n  }\n\n  submitRequest(form: NgForm, reimbursementId: number) {\n    let reimbursement = new Reimbursement();\n\n    reimbursement.id = reimbursementId;\n    reimbursement.resolverId = this.authService.getLoggedInUser().id;\n    reimbursement.dateResolved = new Date();\n\n\n    if (form.value['status'] === 'approve') {\n      reimbursement.statusId = 2;\n    } else if (form.value['status'] === 'deny') {\n      reimbursement.statusId = 3;\n    } else {\n      reimbursement.statusId = 1;\n    }\n\n    this.reimbursementService.updateReimbursement(reimbursement)\n      .subscribe(() => console.log('success'),\n        () => console.log('failure'));\n    window.location.reload();\n  }\n\n  fShowApprovedReimbursements() {\n    this.showApprovedReimbursements = this.showApprovedReimbursements;\n  }\n\n  fShowDeniedReimbursements() {\n    this.showDeniedReimbursements = this.showApprovedReimbursements;\n  }\n\n  fShowPendingReimbursements() {\n    this.showPendingReimbursements = this.showPendingReimbursements;\n  }\n}\n","module.exports = \"\\r\\n.button {\\r\\n  display: inline-block;\\r\\n  padding: 15px 25px;\\r\\n  font-size: 24px;\\r\\n  cursor: pointer;\\r\\n  text-align: center;\\r\\n  text-decoration: none;\\r\\n  outline: none;\\r\\n  color: #fff;\\r\\n  background-color: #4CAF50;\\r\\n  border: none;\\r\\n  border-radius: 15px;\\r\\n  box-shadow: 0 9px #999;\\r\\n}\\r\\n\\r\\n.button:hover {background-color: #3e8e41}\\r\\n\\r\\n.button:active {\\r\\n  background-color: #3e8e41;\\r\\n  box-shadow: 0 5px #666;\\r\\n  -webkit-transform: translateY(4px);\\r\\n          transform: translateY(4px);\\r\\n}\\r\\n\"","module.exports = \"<app-nav [navItems]=\\\"userNavs\\\"></app-nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    userNavs: Array<{title: string}>;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        if (this.authService.hasRoles(['Manager'])) {\r\n            this.userNavs = environment.managerNav;\r\n              // forward to manager page\r\n        } else {\r\n            this.userNavs = environment.employeeNav;\r\n          // forward to employee page\r\n        }\r\n    }\r\n}\r\n","module.exports = \".form-container {\\r\\n    margin: 0 auto;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"form-container\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n    <div>\\r\\n      <input \\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"username\\\" \\r\\n      placeholder=\\\"email\\\"\\r\\n      [(ngModel)]=\\\"username\\\"\\r\\n      required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <input \\r\\n        type=\\\"password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"password\\\"\\r\\n        [(ngModel)]=\\\"password\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/login';\r\n  }\r\n\r\n  loginSubmit() {\r\n    this.authService.authenticate(this.username, this.password,\r\n      () => this.router.navigate([this.returnUrl]),\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"ul {\\r\\n    list-style: none;\\r\\n    border-bottom: 1px solid #bbbb;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n    display: inline-block;\\r\\n    margin-right: 20px;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<nav>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let item of navItems\\\"><a [routerLink]=\\\"['/', item.link]\\\">{{item.title}}</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n<h1></h1>\\r\\n  <h1> You are logged in as.kjg..</h1>\\r\\n  <button type=\\\"button\\\" (click)=\\\"getUser()\\\">Get user Name</button>\\r\\n  <!--<ul>-->\\r\\n    <!--<li *ngFor=\\\"let item of navItems\\\"><a =\\\"\\\">{{item.title}}</a>-->\\r\\n    <!--</li>-->\\r\\n  <!--</ul>-->\\r\\n  <p id=\\\"display\\\"></p>\\r\\n  <p id=\\\"firstName\\\"> </p>\\r\\n</nav>\\r\\n<style>\\r\\n.topright {\\r\\nposition: absolute;\\r\\ntop: 8px;\\r\\nright: 16px;\\r\\nfont-size: 18px;\\r\\n}\\r\\n.middle {\\r\\n  position: absolute;\\r\\n  top: 50px;\\r\\n  right: 40px;\\r\\n  font-size: 30px;\\r\\n}\\r\\n .button {\\r\\n   display: inline-block;\\r\\n   padding: 15px 25px;\\r\\n   font-size: 24px;\\r\\n   cursor: pointer;\\r\\n   text-align: center;\\r\\n   text-decoration: none;\\r\\n   outline: none;\\r\\n   color: #fff;\\r\\n   background-color: #4CAF50;\\r\\n   border: none;\\r\\n   border-radius: 15px;\\r\\n   box-shadow: 0 9px #999;\\r\\n }\\r\\n\\r\\n.button:hover {background-color: #3e8e41}\\r\\n\\r\\n.button:active {\\r\\n  background-color: #3e8e41;\\r\\n  box-shadow: 0 5px #666;\\r\\n  transform: translateY(4px);\\r\\n}\\r\\n</style>\\r\\n  <div class=\\\"topright\\\">\\r\\n  <button type=\\\"submit\\\" (click)=\\\"Logout()\\\">Logout</button>\\r\\n  </div>\\r\\n<div>\\r\\n<button type=\\\"submit\\\" (click)=\\\"getUser()\\\">GetName</button>\\r\\n  </div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\"\r\n  \"\";\r\nimport {every} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  @Input() navItems: Array<{title: string}>;\r\n  username: string;\r\n  password: string;\r\n  returnUrl: string;\r\n   firstName: string;\r\n   lastName: string;\r\n\r\n  constructor (private authService: AuthService,\r\n  private router: Router,\r\n  private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    const every= JSON.parse(localStorage.getItem(('authToken')));\r\n    const firstName = document.getElementById('display').innerHTML = 'firstName:' + every.firstName;\r\n  }\r\n  Logout() {\r\n    console.log(this.firstName, this.lastName);\r\n\r\n    localStorage.removeItem('authToken');\r\n    this.router.navigate([this.returnUrl]);\r\n    window.location.reload();\r\n  }\r\n\r\n  getUser(){\r\n\r\n    const every= JSON.parse(localStorage.getItem(('authToken')));\r\n    const firstName = document.getElementById('display').innerHTML = 'firstName: ' + every.firstName;\r\n\r\n    return document.getElementById('display').innerHTML = firstName;\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\\\">\\r\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\r\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\\\"></script>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <h2>Reimbursement Form</h2>\\r\\n  <form (ngSubmit)=\\\"submitRequest(f)\\\" #f=\\\"ngForm\\\">>\\r\\n    <div id=\\\"reimbursement-data\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"reimbursement-amount\\\">Amount:</label>\\r\\n    </div>\\r\\n      <input type=\\\"number\\\" id=\\\"reimbursement-amount\\\" class=\\\"form-control\\\" ngModel name=\\\"reimbursement-amount\\\"\\r\\n             required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"reimbursement-description\\\">Description:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"reimbursement-description\\\" class=\\\"form-control\\\" ngModel\\r\\n             name=\\\"reimbursement-description\\\" required>\\r\\n    </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"reimbursement-type\\\">Type</label>\\r\\n        <select id=\\\"reimbursement-type\\\" class=\\\"form-control\\\" [ngModel]=\\\"defaultTypeOption\\\" name=\\\"reimbursement-type\\\">\\r\\n          <option value=\\\"1\\\">Lodging</option>\\r\\n          <option value=\\\"2\\\">Travel</option>\\r\\n          <option value=\\\"3\\\">Food</option>\\r\\n          <option value=\\\"4\\\">Other</option>\\r\\n\\r\\n        </select>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ReimbursementService} from \"../../services/reimbursement.service\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {Reimbursement} from \"../../models/Reimbursement\";\nimport {NgForm} from '@angular/forms';\nimport {AuthService} from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-reimbursement-request',\n  templateUrl: './reimbursement-request.component.html',\n  styleUrls: ['./reimbursement-request.component.css']\n})\n\nexport class ReimbursementRequestComponent implements OnInit {\n\n  defaultTypeOption='4';\n\n  constructor(private reimbursementService: ReimbursementService,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  submitRequest(form: NgForm){\n    let reimbursement = new Reimbursement();\n\n    reimbursement.description = form.value['reimbursement-description'];\n    reimbursement.amount = form.value['reimbursement-amount'];\n    reimbursement.typeId = parseInt(form.value['reimbursement-type']);\n    reimbursement.authorId = this.authService.getLoggedInUser().id;\n    reimbursement.resolverId;\n    reimbursement.dateResolved = null;\n    reimbursement.dateSubmitted = new Date('0001-01-01T00:00:00');\n    reimbursement.statusId = 1;\n\n    this.reimbursementService.addReimbursement(reimbursement)\n      .subscribe(() => console.log('success'),\n        () => console.log('failure'));\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Reimbursement Details</h1>\\n<nav>\\n  <ul>\\n    <li *ngFor=\\\"let item of navItems\\\"><a [routerLink]=\\\"['/', item.link]\\\">{{item.title}}</a>\\n    </li>\\n  </ul>\\n  <h1></h1>\\n<style>\\n  table, th, td {\\n    border: 1px solid black;\\n  }\\n  </style>\\n<table style=\\\"width:50%\\\">\\n  <tr>\\n    <th id=\\\"type\\\">Type</th>\\n    <th id=\\\"amount\\\">Amount</th>\\n    <th id=\\\"description\\\">Description</th>\\n    <th id=\\\"dateSubmitted\\\">Submit Date</th>\\n    <th id=\\\"Status\\\">Status</th>\\n  </tr>\\n  <tr *ngFor=\\\"let reimbursement of reimbursements\\\">\\n    <td headers=\\\"type\\\">{{reimbursement.typeId}}</td>\\n    <td headers=\\\"amount\\\">{{reimbursement.amount}}</td>\\n    <td headers=\\\"description\\\">{{reimbursement.description}}</td>\\n    <td headers=\\\"dateSubmitted\\\">{{reimbursement.dateSubmitted | date}}</td>\\n    <td headers=\\\"Status\\\">{{reimbursement.statusId}}</td>\\n  </tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Reimbursement} from \"../../models/Reimbursement\";\r\nimport {ReimbursementService} from \"../../services/reimbursement.service\";\r\n\r\n@Component({\r\n  selector: 'app-view-all-reimbursements',\r\n  templateUrl: './view-all-reimbursements.component.html',\r\n  styleUrls: ['./view-all-reimbursements.component.css']\r\n})\r\nexport class ViewAllReimbursementsComponent implements OnInit {\r\n  reimbursements: Reimbursement[];\r\n\r\n  constructor(private reimbursementService: ReimbursementService) { }\r\n\r\n  ngOnInit() {\r\n    this.reimbursementService.getAllReimbursements()\r\n      .subscribe(reimbursements => {\r\n        this.reimbursements = reimbursements;\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Reimbursement Details</h1>\\n\\n<style>\\n  table, th, td {\\n    border: 1px solid black;\\n  }\\n</style>\\n\\n<table style=\\\"width:50%\\\">\\n  <tr>\\n    <th id=\\\"type\\\">Type</th>\\n    <th id=\\\"amount\\\">Amount</th>\\n    <th id=\\\"description\\\">Description</th>\\n    <th id=\\\"dateSubmitted\\\">Submit Date</th>\\n  </tr>\\n  <tr *ngFor=\\\"let reimbursement of reimbursements\\\">\\n    <td headers=\\\"type\\\">{{reimbursement.typeId}}</td>\\n    <td headers=\\\"amount\\\">{{reimbursement.amount}}</td>\\n    <td headers=\\\"description\\\">{{reimbursement.description}}</td>\\n    <td headers=\\\"dateSubmitted\\\">{{reimbursement.dateSubmitted}}</td>\\n  </tr>\\n</table>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ReimbursementService} from \"../../services/reimbursement.service\";\nimport {AuthService} from '../../services/auth.service';\nimport {Reimbursement} from \"../../models/Reimbursement\";\n\n@Component({\n  selector: 'app-view-reimbursements',\n  templateUrl: './view-reimbursements.component.html',\n  styleUrls: ['./view-reimbursements.component.css']\n})\nexport class ViewReimbursementsComponent implements OnInit {\n  reimbursements: Reimbursement[];\n\n  constructor(\n    private reimbursementService: ReimbursementService,\n    private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    let loggedInUserId = this.authService.getLoggedInUser().id;\n    this.reimbursementService.getReimbursementsByAuthorId(loggedInUserId)\n      .subscribe(reimbursements => this.reimbursements = reimbursements);\n  }\n\n}\n\n","export class Reimbursement{\r\n\r\n  public id: number;\r\n  public amount: number;\r\n  public dateSubmitted: Date;\r\n  public dateResolved: Date;\r\n  public description: string;\r\n  public authorId: number;\r\n  public resolverId: number;\r\n  public statusId: number;\r\n  public typeId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// used as a route guard.\r\n// if returning false the route will not be loaded\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('authToken')) {\r\n\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private authUrl = 'http://localhost:8080/login/auth';\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  isLoggedIn(): boolean {\r\n    return localStorage.getItem('authToken') !== null;\r\n  }\r\n\r\n  getLoggedInUser(){\r\n    let userJson = localStorage.getItem('authToken');\r\n    if(userJson === null)return null;\r\n    let user = JSON.parse(userJson);\r\n    return user;\r\n  }\r\n\r\n  hasRoles(roles: Array<string>): boolean {\r\n    const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).roles;\r\n    return roles.every(role => tokenRoles.indexOf(role) >= 0);\r\n  }\r\n\r\n  authenticate(username: string, password: string, success, fail) {\r\n    return this.http.post<any>(this.authUrl,\r\n      JSON.stringify({email: username, password: password}),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .toPromise()\r\n      .then((resp) => {\r\n          localStorage.setItem('authToken', JSON.stringify(resp));\r\n          success();\r\n        },\r\n        (err) => {\r\n          fail(err);\r\n        });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ReimbursementRequestComponent} from \"../components/reimbursement-request/reimbursement-request.component\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {Reimbursement} from \"../models/Reimbursement\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReimbursementService {\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getReimbursementsByAuthorId(authorId: number): Observable<Reimbursement[]> {\r\n    return this.httpClient.get<Reimbursement[]>('http://localhost:8080/login/reimbursementsbyauthor/' + authorId);\r\n  }\r\n\r\n  getAllReimbursements(): Observable<Reimbursement[]>{\r\n    return this.httpClient.get<Reimbursement[]>('http://localhost:8080/login/reimbursements/');\r\n  }\r\n\r\n  addReimbursement(reimbursement: Reimbursement): Observable<Reimbursement>{\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n\r\n      })\r\n    };\r\n\r\n    return this.httpClient.post<Reimbursement>('http://localhost:8080/login/reimbursements/', reimbursement, httpOptions);\r\n  }\r\n  updateReimbursement(reimbursement: Reimbursement): Observable<Reimbursement>{\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.httpClient.put<Reimbursement>('http://localhost:8080/login/reimbursements/', reimbursement, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:8080\",\r\n  managerNav: [\r\n    {\r\n      title: 'Reimbursements',\r\n      link: 'showreimbursementsmanager'\r\n    },\r\n    {\r\n      title: 'Approve/Deny',\r\n      link: 'approveordenyreimbursements'\r\n    }\r\n  ],\r\n  employeeNav: [\r\n    {\r\n      title: 'Reimbursements',\r\n      link: 'showreimbursementsemp'\r\n    },\r\n    {\r\n      title: 'New Reimbursement',\r\n      link: 'reimbursementrequest'\r\n    }\r\n  ]\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}